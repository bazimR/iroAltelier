{{>userNavbar}}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css"
    integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

<section class="sec-product-detail bg0 p-t-65 p-b-60">
    <div class="container">
        <div class="row">
            <div class="col-md-6 col-lg-7 p-b-30">
                <div class="p-l-25 p-r-30 p-lr-0-lg">
                    <div class="wrap-slick3 flex-sb flex-w">
                        <div class="wrap-slick3-dots"></div>
                        <div class="wrap-slick3-arrows flex-sb-m flex-w"></div>
                        <div class="slick3 gallery-lb">
                            <div class="item-slick3" data-thumb="/product-img/{{products.imageFilename.[0]}}">
                                <div class="wrap-pic-w pos-relative ">
                                    <img src="/product-img/{{products.imageFilename.[0]}}" alt="IMG-PRODUCT">
                                </div>
                            </div>
                            <div class="item-slick3" data-thumb="/product-img/{{products.imageFilename.[1]}}">
                                <div class="wrap-pic-w pos-relative ">
                                    <img src="/product-img/{{products.imageFilename.[1]}}" alt="IMG-PRODUCT">
                                </div>
                            </div>
                            <div class="item-slick3" data-thumb="/product-img/{{products.imageFilename.[2]}}">
                                <div class="wrap-pic-w pos-relative ">
                                    <img src="/product-img/{{products.imageFilename.[2]}}" alt="IMG-PRODUCT">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6 col-lg-5 p-b-30">
                <div class="p-r-50 p-t-5 p-lr-0-lg">
                    <h4 class="mtext-105 cl2 js-name-detail p-b-14">
                        {{products.name}}
                    </h4>
                    <span class="mtext-106 cl2 ">
                        Price:
                    </span><span class="mtext-106 cl2 " style="text-decoration: line-through">
                        {{products.price}}
                    </span><br>
                    <span class="mtext-106 cl2 ">
                        Offer Price:
                    </span>
                    <span class="mtext-106 cl2 text-primary">
                        {{products.offerprice}}
                    </span>

                    <p class="stext-102 cl3 p-t-23">
                        {{products.description}}
                    </p>

                    <!--  -->

                    <div class="">
                        <div class="size-204 flex-w flex-m respon6-next">
                            <div class="wrap-num-product flex-w m-r-20 m-tb-10">
                                <div class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m">
                                    <i class="fs-16 zmdi zmdi-minus"></i>
                                </div>

                                <input class="mtext-104 cl3 txt-center num-product" type="number" name="num-product"
                                    value="1">

                                <div class="btn-num-product-up cl8 hov-btn3 trans-04 flex-c-m">
                                    <i class="fs-16 zmdi zmdi-plus"></i>
                                </div>
                            </div>

                            <button
                                class="flex-c-m stext-101 cl0 size-101 bg1 bor1 hov-btn1 p-lr-15 trans-04 js-addcart-detail">
                                Add to cart
                            </button>
                        </div>
                    </div>

                    <!--  -->

                </div>
            </div>
        </div>
</section>
<script>
    /*!
    Zoom 1.7.21
    license: MIT
    http://www.jacklmoore.com/zoom
*/
    (function ($) {
        var defaults = {
            url: false,
            callback: false,
            target: false,
            duration: 120,
            on: 'mouseover', // other options: grab, click, toggle
            touch: true, // enables a touch fallback
            onZoomIn: false,
            onZoomOut: false,
            magnify: 1
        };

        // Core Zoom Logic, independent of event listeners.
        $.zoom = function (target, source, img, magnify) {
            var targetHeight,
                targetWidth,
                sourceHeight,
                sourceWidth,
                xRatio,
                yRatio,
                offset,
                $target = $(target),
                position = $target.css('position'),
                $source = $(source);

            // The parent element needs positioning so that the zoomed element can be correctly positioned within.
            target.style.position = /(absolute|fixed)/.test(position) ? position : 'relative';
            target.style.overflow = 'hidden';
            img.style.width = img.style.height = '';

            $(img)
                .addClass('zoomImg')
                .css({
                    position: 'absolute',
                    top: 0,
                    left: 0,
                    opacity: 0,
                    width: img.width * magnify,
                    height: img.height * magnify,
                    border: 'none',
                    maxWidth: 'none',
                    maxHeight: 'none'
                })
                .appendTo(target);

            return {
                init: function () {
                    targetWidth = $target.outerWidth();
                    targetHeight = $target.outerHeight();

                    if (source === target) {
                        sourceWidth = targetWidth;
                        sourceHeight = targetHeight;
                    } else {
                        sourceWidth = $source.outerWidth();
                        sourceHeight = $source.outerHeight();
                    }

                    xRatio = (img.width - targetWidth) / sourceWidth;
                    yRatio = (img.height - targetHeight) / sourceHeight;

                    offset = $source.offset();
                },
                move: function (e) {
                    var left = (e.pageX - offset.left),
                        top = (e.pageY - offset.top);

                    top = Math.max(Math.min(top, sourceHeight), 0);
                    left = Math.max(Math.min(left, sourceWidth), 0);

                    img.style.left = (left * -xRatio) + 'px';
                    img.style.top = (top * -yRatio) + 'px';
                }
            };
        };

        $.fn.zoom = function (options) {
            return this.each(function () {
                var
                    settings = $.extend({}, defaults, options || {}),
                    //target will display the zoomed image
                    target = settings.target && $(settings.target)[0] || this,
                    //source will provide zoom location info (thumbnail)
                    source = this,
                    $source = $(source),
                    img = document.createElement('img'),
                    $img = $(img),
                    mousemove = 'mousemove.zoom',
                    clicked = false,
                    touched = false;

                // If a url wasn't specified, look for an image element.
                if (!settings.url) {
                    var srcElement = source.querySelector('img');
                    if (srcElement) {
                        settings.url = srcElement.getAttribute('data-src') || srcElement.currentSrc || srcElement.src;
                    }
                    if (!settings.url) {
                        return;
                    }
                }

                $source.one('zoom.destroy', function (position, overflow) {
                    $source.off(".zoom");
                    target.style.position = position;
                    target.style.overflow = overflow;
                    img.onload = null;
                    $img.remove();
                }.bind(this, target.style.position, target.style.overflow));

                img.onload = function () {
                    var zoom = $.zoom(target, source, img, settings.magnify);

                    function start(e) {
                        zoom.init();
                        zoom.move(e);

                        // Skip the fade-in for IE8 and lower since it chokes on fading-in
                        // and changing position based on mousemovement at the same time.
                        $img.stop()
                            .fadeTo($.support.opacity ? settings.duration : 0, 1, $.isFunction(settings.onZoomIn) ? settings.onZoomIn.call(img) : false);
                    }

                    function stop() {
                        $img.stop()
                            .fadeTo(settings.duration, 0, $.isFunction(settings.onZoomOut) ? settings.onZoomOut.call(img) : false);
                    }

                    // Mouse events
                    if (settings.on === 'grab') {
                        $source
                            .on('mousedown.zoom',
                                function (e) {
                                    if (e.which === 1) {
                                        $(document).one('mouseup.zoom',
                                            function () {
                                                stop();

                                                $(document).off(mousemove, zoom.move);
                                            }
                                        );

                                        start(e);

                                        $(document).on(mousemove, zoom.move);

                                        e.preventDefault();
                                    }
                                }
                            );
                    } else if (settings.on === 'click') {
                        $source.on('click.zoom',
                            function (e) {
                                if (clicked) {
                                    // bubble the event up to the document to trigger the unbind.
                                    return;
                                } else {
                                    clicked = true;
                                    start(e);
                                    $(document).on(mousemove, zoom.move);
                                    $(document).one('click.zoom',
                                        function () {
                                            stop();
                                            clicked = false;
                                            $(document).off(mousemove, zoom.move);
                                        }
                                    );
                                    return false;
                                }
                            }
                        );
                    } else if (settings.on === 'toggle') {
                        $source.on('click.zoom',
                            function (e) {
                                if (clicked) {
                                    stop();
                                } else {
                                    start(e);
                                }
                                clicked = !clicked;
                            }
                        );
                    } else if (settings.on === 'mouseover') {
                        zoom.init(); // Preemptively call init because IE7 will fire the mousemove handler before the hover handler.

                        $source
                            .on('mouseenter.zoom', start)
                            .on('mouseleave.zoom', stop)
                            .on(mousemove, zoom.move);
                    }

                    // Touch fallback
                    if (settings.touch) {
                        $source
                            .on('touchstart.zoom', function (e) {
                                e.preventDefault();
                                if (touched) {
                                    touched = false;
                                    stop();
                                } else {
                                    touched = true;
                                    start(e.originalEvent.touches[0] || e.originalEvent.changedTouches[0]);
                                }
                            })
                            .on('touchmove.zoom', function (e) {
                                e.preventDefault();
                                zoom.move(e.originalEvent.touches[0] || e.originalEvent.changedTouches[0]);
                            })
                            .on('touchend.zoom', function (e) {
                                e.preventDefault();
                                if (touched) {
                                    touched = false;
                                    stop();
                                }
                            });
                    }

                    if ($.isFunction(settings.callback)) {
                        settings.callback.call(img);
                    }
                };

                img.setAttribute('role', 'presentation');
                img.alt = '';
                img.src = settings.url;
            });
        };

        $.fn.zoom.defaults = defaults;
    }(window.jQuery));

</script>
<script>
    $(document).ready(function () {
        $('img')
            .wrap('<span style="display:inline-block"></span>')
            .css('display', 'block')
            .parent()
            .zoom({ magnify: 2 });
        $('#footer').trigger('zoom.destroy');
    });
</script>
{{>userFooter}}